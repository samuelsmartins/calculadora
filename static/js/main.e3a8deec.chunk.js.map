{"version":3,"sources":["components/Button.jsx","components/Display.jsx","main/Calculator.jsx","reportWebVitals.js","index.js"],"names":["props","className","operation","double","triple","onClick","e","click","label","value","initialState","displayValue","clearDisplay","values","current","Calculator","state","this","setState","equals","currentOperation","n","includes","i","newValue","parseFloat","addDigit","setOperation","op","clearMemory","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a8deec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Button.css'\r\n\r\nexport default props =>\r\n    <button className={`\r\n        button\r\n        ${props.operation ? 'operation' : ''}\r\n        ${props.double ? 'double' : ''}\r\n        ${props.triple ? 'triple' : ''} \r\n    `}\r\n    onClick = {e => props.click && props.click(props.label)}\r\n    >        \r\n        {props.label}\r\n\r\n    </button>\r\n","import React from \"react\";\r\nimport './Display.css'\r\n\r\nexport default props => \r\n<div className='display'>{props.value}</div>","import React, { Component } from \"react\";\r\nimport './Calculator.css'\r\n\r\nimport Button from \"../components/Button\";\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = { ...initialState }\r\n\r\n    clearMemory(){\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n    setOperation(operation){\r\n        if (this.state.current === 0){\r\n            this.setState({ operation, current: 1, clearDisplay: true})\r\n        }else{\r\n            const equals = operation === '='\r\n            const currentOperation = this.state.operation\r\n\r\n            const values = [...this.state.values]\r\n\r\n            switch (currentOperation) {\r\n                case '/':\r\n                values[0] = values[0] / values[1]\r\n                    values[1] = 0\r\n                    break\r\n                case '*':\r\n                    values[0] = values[0] * values[1]\r\n                    values[1] = 0\r\n                    break\r\n                case '-':\r\n                    values[0] = values[0] - values[1]\r\n                    values[1] = 0\r\n                    break\r\n                case '+':\r\n                    values[0] = values[0] + values[1]\r\n                    values[1] = 0\r\n                    break\r\n                case '=':\r\n                    values[1] = 0\r\n                    break\r\n                default:                    \r\n                    values[1] = 0                    \r\n            }\r\n\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n){\r\n        if(n === '.' && this.state.displayValue.includes('.')){\r\n            return \r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\r\n\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n\r\n        const displayValue = currentValue + n\r\n\r\n        this.setState({ displayValue, clearDisplay: false})\r\n\r\n        if (n !== '.'){\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({ values })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const addDigit = n => this.addDigit(n)\r\n        const setOperation = op => this.setOperation(op)\r\n        const clearMemory = () => this.clearMemory()\r\n\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click = {clearMemory} triple />\r\n                <Button label=\"/\" click = {setOperation} operation/>\r\n                <Button label=\"7\" click = {addDigit} />\r\n                <Button label=\"8\" click = {addDigit}/>\r\n                <Button label=\"9\" click = {addDigit}/>\r\n                <Button label=\"*\" click = {setOperation} operation/>\r\n                <Button label=\"4\" click = {addDigit}/>\r\n                <Button label=\"5\" click = {addDigit}/>\r\n                <Button label=\"6\" click = {addDigit}/>\r\n                <Button label=\"-\" click = {setOperation}\r\n                operation/>\r\n                <Button label=\"1\" click = {addDigit}/>\r\n                <Button label=\"2\" click = {addDigit}/>\r\n                <Button label=\"3\" click = {addDigit}/>\r\n                <Button label=\"+\" click = {setOperation} operation/>\r\n                <Button label=\"0\" click = {addDigit} double />\r\n                <Button label=\".\" click = {addDigit}/>\r\n                <Button label=\"=\" click = {setOperation}\r\n                operation/>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <h1>Calculadora</h1>\n      <Calculator />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}